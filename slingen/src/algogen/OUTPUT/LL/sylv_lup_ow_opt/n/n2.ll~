
For[ @it@; 0; @n@-(@nb@+1); @nb@ ]
{
	%% Equal( NL[ X_1 ], sylv_lup_ow( L, X_1, U_11 ) )
	@out0@[h(@m@,@m@,0), h(@nb@,@n@,@it@)] = sylv_lup_ow_opt(@m@, @nb@; @op0@[h(@m@,@m@,0), h(@m@,@m@,0)]#LowerTriangular#, @out0@[h(@m@,@m@,0), h(@nb@,@n@,@it@)], @op2@[h(@nb@,@n@,@it@), h(@nb@,@n@,@it@)]#UpperTriangular#);
	%% Equal( NL[ X_2 ], Plus( Times( Minus( X_1 ), U_12 ), X_2 ) )
	@out0@[h(@m@,@m@,0), h(@n@-(@it@+@nb@),@n@,@it@+@nb@)] = -@out0@[h(@m@,@m@,0), h(@nb@,@n@,@it@)] * @op2@[h(@nb@,@n@,@it@), h(@n@-(@it@+@nb@),@n@,@it@+@nb@)] + @out0@[h(@m@,@m@,0), h(@n@-(@it@+@nb@),@n@,@it@+@nb@)];
};
%% Equal( NL[ X_1 ], sylv_lup_ow( L, X_1, U_11 ) )
@out0@[h(@m@,@m@,0), h(@nb@,@n@,max(@n@-@nb@, 0))] = sylv_lup_ow_opt(@m@, @nb@; @op0@[h(@m@,@m@,0), h(@m@,@m@,0)]#LowerTriangular#, @out0@[h(@m@,@m@,0), h(@nb@,@n@,max(@n@-@nb@, 0))], @op2@[h(@nb@,@n@,max(@n@-@nb@, 0)), h(@nb@,@n@,max(@n@-@nb@, 0))]#UpperTriangular#);

