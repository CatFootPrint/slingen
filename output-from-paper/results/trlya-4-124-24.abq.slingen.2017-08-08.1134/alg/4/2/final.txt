Using part. schemes: Assign_Add_Mul_LowerTriangular_Symmetric_Mul_Symmetric_T_LowerTriangular_Symmetric_opt_m01_ftmpyozk_lwn_opt_m4_n1

================================================================================

  X[h(1, 4, 0),h(1, 4, 0)] = ( X[h(1, 4, 0),h(1, 4, 0)] / ( 2 * L[h(1, 4, 0),h(1, 4, 0)] ) );
  X[h(1, 4, 1),h(1, 4, 0)] = ( ( -( L[h(1, 4, 1),h(1, 4, 0)] ) * X[h(1, 4, 0),h(1, 4, 0)] ) + C[h(1, 4, 1),h(1, 4, 0)] );
  X[h(1, 4, 1),h(1, 4, 0)] = ( X[h(1, 4, 1),h(1, 4, 0)] / ( L[h(1, 4, 1),h(1, 4, 1)] + L[h(1, 4, 0),h(1, 4, 0)] ) );
  X[h(1, 4, 1),h(1, 4, 1)] = ( C[h(1, 4, 1),h(1, 4, 1)] - ( ( L[h(1, 4, 1),h(1, 4, 0)] * trans( X[h(1, 4, 1),h(1, 4, 0)] ) ) + ( X[h(1, 4, 1),h(1, 4, 0)] * trans( L[h(1, 4, 1),h(1, 4, 0)] ) ) ) );
  X[h(1, 4, 1),h(1, 4, 1)] = ( X[h(1, 4, 1),h(1, 4, 1)] / ( 2 * L[h(1, 4, 1),h(1, 4, 1)] ) );
  X[h(1, 4, 2),h(2, 4, 0)] = ( ( -( L[h(1, 4, 2),h(2, 4, 0)] ) * X[h(2, 4, 0),h(2, 4, 0)] ) + C[h(1, 4, 2),h(2, 4, 0)] );
  X[h(1, 4, 2),h(1, 4, 0)] = ( X[h(1, 4, 2),h(1, 4, 0)] / ( L[h(1, 4, 2),h(1, 4, 2)] + L[h(1, 4, 0),h(1, 4, 0)] ) );
  X[h(1, 4, 2),h(1, 4, 1)] = ( ( -( X[h(1, 4, 2),h(1, 4, 0)] ) * trans( L[h(1, 4, 1),h(1, 4, 0)] ) ) + X[h(1, 4, 2),h(1, 4, 1)] );
  X[h(1, 4, 2),h(1, 4, 1)] = ( X[h(1, 4, 2),h(1, 4, 1)] / ( L[h(1, 4, 2),h(1, 4, 2)] + L[h(1, 4, 1),h(1, 4, 1)] ) );
  X[h(1, 4, 2),h(1, 4, 2)] = ( C[h(1, 4, 2),h(1, 4, 2)] - ( ( L[h(1, 4, 2),h(2, 4, 0)] * trans( X[h(1, 4, 2),h(2, 4, 0)] ) ) + ( X[h(1, 4, 2),h(2, 4, 0)] * trans( L[h(1, 4, 2),h(2, 4, 0)] ) ) ) );
  X[h(1, 4, 2),h(1, 4, 2)] = ( X[h(1, 4, 2),h(1, 4, 2)] / ( 2 * L[h(1, 4, 2),h(1, 4, 2)] ) );
  X[h(1, 4, 3),h(3, 4, 0)] = ( ( -( L[h(1, 4, 3),h(3, 4, 0)] ) * X[h(3, 4, 0),h(3, 4, 0)] ) + C[h(1, 4, 3),h(3, 4, 0)] );
  X[h(1, 4, 3),h(1, 4, 0)] = ( X[h(1, 4, 3),h(1, 4, 0)] / ( L[h(1, 4, 3),h(1, 4, 3)] + L[h(1, 4, 0),h(1, 4, 0)] ) );
  X[h(1, 4, 3),h(1, 4, 1)] = ( ( -( X[h(1, 4, 3),h(1, 4, 0)] ) * trans( L[h(1, 4, 1),h(1, 4, 0)] ) ) + X[h(1, 4, 3),h(1, 4, 1)] );
  X[h(1, 4, 3),h(1, 4, 1)] = ( X[h(1, 4, 3),h(1, 4, 1)] / ( L[h(1, 4, 3),h(1, 4, 3)] + L[h(1, 4, 1),h(1, 4, 1)] ) );
  X[h(1, 4, 3),h(1, 4, 2)] = ( ( -( X[h(1, 4, 3),h(2, 4, 0)] ) * trans( L[h(1, 4, 2),h(2, 4, 0)] ) ) + X[h(1, 4, 3),h(1, 4, 2)] );
  X[h(1, 4, 3),h(1, 4, 2)] = ( X[h(1, 4, 3),h(1, 4, 2)] / ( L[h(1, 4, 3),h(1, 4, 3)] + L[h(1, 4, 2),h(1, 4, 2)] ) );
  X[h(1, 4, 3),h(1, 4, 3)] = ( C[h(1, 4, 3),h(1, 4, 3)] - ( ( L[h(1, 4, 3),h(3, 4, 0)] * trans( X[h(1, 4, 3),h(3, 4, 0)] ) ) + ( X[h(1, 4, 3),h(3, 4, 0)] * trans( L[h(1, 4, 3),h(3, 4, 0)] ) ) ) );
  X[h(1, 4, 3),h(1, 4, 3)] = ( X[h(1, 4, 3),h(1, 4, 3)] / ( 2 * L[h(1, 4, 3),h(1, 4, 3)] ) );
