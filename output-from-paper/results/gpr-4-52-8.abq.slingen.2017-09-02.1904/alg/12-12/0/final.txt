Using part. schemes: Assign_Mul_LowerTriangular_Matrix_Matrix_opt_m04_m21_Assign_Mul_LowerTriangular_T_LowerTriangular_Symmetric_opt_m03_Assign_Mul_T_LowerTriangular_Matrix_Matrix_opt_m04_m21_rdiv_ltn_ow_opt_m1_n4

================================================================================

  For [fi18;0;7;4] {

    L[h(1, 12, fi18),h(1, 12, fi18)] = sqrt( L[h(1, 12, fi18),h(1, 12, fi18)] );
    L[h(1, 12, fi18 + 1),h(1, 12, fi18)] = ( L[h(1, 12, fi18 + 1),h(1, 12, fi18)] / L[h(1, 12, fi18),h(1, 12, fi18)] );
    L[h(1, 12, fi18 + 2),h(1, 12, fi18)] = ( L[h(1, 12, fi18 + 2),h(1, 12, fi18)] / L[h(1, 12, fi18),h(1, 12, fi18)] );
    L[h(1, 12, fi18 + 3),h(1, 12, fi18)] = ( L[h(1, 12, fi18 + 3),h(1, 12, fi18)] / L[h(1, 12, fi18),h(1, 12, fi18)] );
    L[h(3, 12, fi18 + 1),h(3, 12, fi18 + 1)] = ( L[h(3, 12, fi18 + 1),h(3, 12, fi18 + 1)] + ( -( L[h(3, 12, fi18 + 1),h(1, 12, fi18)] ) * trans( L[h(3, 12, fi18 + 1),h(1, 12, fi18)] ) ) );
    L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] = sqrt( L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] );
    L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 1)] / L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] );
    L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 1)] / L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] );
    L[h(2, 12, fi18 + 2),h(2, 12, fi18 + 2)] = ( L[h(2, 12, fi18 + 2),h(2, 12, fi18 + 2)] + ( -( L[h(2, 12, fi18 + 2),h(1, 12, fi18 + 1)] ) * trans( L[h(2, 12, fi18 + 2),h(1, 12, fi18 + 1)] ) ) );
    L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 2)] = sqrt( L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 2)] );
    L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] / L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 2)] );
    L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] + ( -( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] ) * trans( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] ) ) );
    L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] = sqrt( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] );
    For [fi79;0;-fi18 + 4;4] {

      L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18)] = ( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18)] / L[h(1, 12, fi18),h(1, 12, fi18)] );
      L[h(1, 12, fi18 + fi79 + 4),h(3, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 4),h(3, 12, fi18 + 1)] + ( -( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18)] ) * trans( L[h(3, 12, fi18 + 1),h(1, 12, fi18)] ) ) );
      L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 1)] / L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] );
      L[h(1, 12, fi18 + fi79 + 4),h(2, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 4),h(2, 12, fi18 + 2)] + ( -( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 1)] ) * trans( L[h(2, 12, fi18 + 2),h(1, 12, fi18 + 1)] ) ) );
      L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 2)] / L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 2)] );
      L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 3)] + ( -( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 2)] ) * trans( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] ) ) );
      L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 4),h(1, 12, fi18 + 3)] / L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] );
      L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18)] = ( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18)] / L[h(1, 12, fi18),h(1, 12, fi18)] );
      L[h(1, 12, fi18 + fi79 + 5),h(3, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 5),h(3, 12, fi18 + 1)] + ( -( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18)] ) * trans( L[h(3, 12, fi18 + 1),h(1, 12, fi18)] ) ) );
      L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 1)] / L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] );
      L[h(1, 12, fi18 + fi79 + 5),h(2, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 5),h(2, 12, fi18 + 2)] + ( -( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 1)] ) * trans( L[h(2, 12, fi18 + 2),h(1, 12, fi18 + 1)] ) ) );
      L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 2)] / L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 2)] );
      L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 3)] + ( -( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 2)] ) * trans( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] ) ) );
      L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 5),h(1, 12, fi18 + 3)] / L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] );
      L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18)] = ( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18)] / L[h(1, 12, fi18),h(1, 12, fi18)] );
      L[h(1, 12, fi18 + fi79 + 6),h(3, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 6),h(3, 12, fi18 + 1)] + ( -( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18)] ) * trans( L[h(3, 12, fi18 + 1),h(1, 12, fi18)] ) ) );
      L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 1)] / L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] );
      L[h(1, 12, fi18 + fi79 + 6),h(2, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 6),h(2, 12, fi18 + 2)] + ( -( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 1)] ) * trans( L[h(2, 12, fi18 + 2),h(1, 12, fi18 + 1)] ) ) );
      L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 2)] / L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 2)] );
      L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 3)] + ( -( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 2)] ) * trans( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] ) ) );
      L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 6),h(1, 12, fi18 + 3)] / L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] );
      L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18)] = ( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18)] / L[h(1, 12, fi18),h(1, 12, fi18)] );
      L[h(1, 12, fi18 + fi79 + 7),h(3, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 7),h(3, 12, fi18 + 1)] + ( -( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18)] ) * trans( L[h(3, 12, fi18 + 1),h(1, 12, fi18)] ) ) );
      L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 1)] = ( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 1)] / L[h(1, 12, fi18 + 1),h(1, 12, fi18 + 1)] );
      L[h(1, 12, fi18 + fi79 + 7),h(2, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 7),h(2, 12, fi18 + 2)] + ( -( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 1)] ) * trans( L[h(2, 12, fi18 + 2),h(1, 12, fi18 + 1)] ) ) );
      L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 2)] = ( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 2)] / L[h(1, 12, fi18 + 2),h(1, 12, fi18 + 2)] );
      L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 3)] + ( -( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 2)] ) * trans( L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 2)] ) ) );
      L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 3)] = ( L[h(1, 12, fi18 + fi79 + 7),h(1, 12, fi18 + 3)] / L[h(1, 12, fi18 + 3),h(1, 12, fi18 + 3)] );

    };
    L[h(-fi18 + 8, 12, fi18 + 4),h(-fi18 + 8, 12, fi18 + 4)] = ( L[h(-fi18 + 8, 12, fi18 + 4),h(-fi18 + 8, 12, fi18 + 4)] + ( -( L[h(-fi18 + 8, 12, fi18 + 4),h(4, 12, fi18)] ) * trans( L[h(-fi18 + 8, 12, fi18 + 4),h(4, 12, fi18)] ) ) );

  };
  L[h(1, 12, 8),h(1, 12, 8)] = sqrt( L[h(1, 12, 8),h(1, 12, 8)] );
  L[h(1, 12, 9),h(1, 12, 8)] = ( L[h(1, 12, 9),h(1, 12, 8)] / L[h(1, 12, 8),h(1, 12, 8)] );
  L[h(1, 12, 10),h(1, 12, 8)] = ( L[h(1, 12, 10),h(1, 12, 8)] / L[h(1, 12, 8),h(1, 12, 8)] );
  L[h(1, 12, 11),h(1, 12, 8)] = ( L[h(1, 12, 11),h(1, 12, 8)] / L[h(1, 12, 8),h(1, 12, 8)] );
  L[h(3, 12, 9),h(3, 12, 9)] = ( L[h(3, 12, 9),h(3, 12, 9)] + ( -( L[h(3, 12, 9),h(1, 12, 8)] ) * trans( L[h(3, 12, 9),h(1, 12, 8)] ) ) );
  L[h(1, 12, 9),h(1, 12, 9)] = sqrt( L[h(1, 12, 9),h(1, 12, 9)] );
  L[h(1, 12, 10),h(1, 12, 9)] = ( L[h(1, 12, 10),h(1, 12, 9)] / L[h(1, 12, 9),h(1, 12, 9)] );
  L[h(1, 12, 11),h(1, 12, 9)] = ( L[h(1, 12, 11),h(1, 12, 9)] / L[h(1, 12, 9),h(1, 12, 9)] );
  L[h(2, 12, 10),h(2, 12, 10)] = ( L[h(2, 12, 10),h(2, 12, 10)] + ( -( L[h(2, 12, 10),h(1, 12, 9)] ) * trans( L[h(2, 12, 10),h(1, 12, 9)] ) ) );
  L[h(1, 12, 10),h(1, 12, 10)] = sqrt( L[h(1, 12, 10),h(1, 12, 10)] );
  L[h(1, 12, 11),h(1, 12, 10)] = ( L[h(1, 12, 11),h(1, 12, 10)] / L[h(1, 12, 10),h(1, 12, 10)] );
  L[h(1, 12, 11),h(1, 12, 11)] = ( L[h(1, 12, 11),h(1, 12, 11)] + ( -( L[h(1, 12, 11),h(1, 12, 10)] ) * trans( L[h(1, 12, 11),h(1, 12, 10)] ) ) );
  L[h(1, 12, 11),h(1, 12, 11)] = sqrt( L[h(1, 12, 11),h(1, 12, 11)] );
  For [fi159;0;7;4] {

    t0[h(1, 12, fi159),h(1, 1, 0)] = ( t0[h(1, 12, fi159),h(1, 1, 0)] / L0[h(1, 12, fi159),h(1, 12, fi159)] );
    t0[h(3, 12, fi159 + 1),h(1, 1, 0)] = ( t0[h(3, 12, fi159 + 1),h(1, 1, 0)] + ( -( L0[h(3, 12, fi159 + 1),h(1, 12, fi159)] ) * t0[h(1, 12, fi159),h(1, 1, 0)] ) );
    t0[h(1, 12, fi159 + 1),h(1, 1, 0)] = ( t0[h(1, 12, fi159 + 1),h(1, 1, 0)] / L0[h(1, 12, fi159 + 1),h(1, 12, fi159 + 1)] );
    t0[h(2, 12, fi159 + 2),h(1, 1, 0)] = ( t0[h(2, 12, fi159 + 2),h(1, 1, 0)] + ( -( L0[h(2, 12, fi159 + 2),h(1, 12, fi159 + 1)] ) * t0[h(1, 12, fi159 + 1),h(1, 1, 0)] ) );
    t0[h(1, 12, fi159 + 2),h(1, 1, 0)] = ( t0[h(1, 12, fi159 + 2),h(1, 1, 0)] / L0[h(1, 12, fi159 + 2),h(1, 12, fi159 + 2)] );
    t0[h(1, 12, fi159 + 3),h(1, 1, 0)] = ( t0[h(1, 12, fi159 + 3),h(1, 1, 0)] + ( -( L0[h(1, 12, fi159 + 3),h(1, 12, fi159 + 2)] ) * t0[h(1, 12, fi159 + 2),h(1, 1, 0)] ) );
    t0[h(1, 12, fi159 + 3),h(1, 1, 0)] = ( t0[h(1, 12, fi159 + 3),h(1, 1, 0)] / L0[h(1, 12, fi159 + 3),h(1, 12, fi159 + 3)] );
    t0[h(-fi159 + 8, 12, fi159 + 4),h(1, 1, 0)] = ( t0[h(-fi159 + 8, 12, fi159 + 4),h(1, 1, 0)] + ( -( L0[h(-fi159 + 8, 12, fi159 + 4),h(4, 12, fi159)] ) * t0[h(4, 12, fi159),h(1, 1, 0)] ) );

  };
  t0[h(1, 12, 8),h(1, 1, 0)] = ( t0[h(1, 12, 8),h(1, 1, 0)] / L0[h(1, 12, 8),h(1, 12, 8)] );
  t0[h(3, 12, 9),h(1, 1, 0)] = ( t0[h(3, 12, 9),h(1, 1, 0)] + ( -( L0[h(3, 12, 9),h(1, 12, 8)] ) * t0[h(1, 12, 8),h(1, 1, 0)] ) );
  t0[h(1, 12, 9),h(1, 1, 0)] = ( t0[h(1, 12, 9),h(1, 1, 0)] / L0[h(1, 12, 9),h(1, 12, 9)] );
  t0[h(2, 12, 10),h(1, 1, 0)] = ( t0[h(2, 12, 10),h(1, 1, 0)] + ( -( L0[h(2, 12, 10),h(1, 12, 9)] ) * t0[h(1, 12, 9),h(1, 1, 0)] ) );
  t0[h(1, 12, 10),h(1, 1, 0)] = ( t0[h(1, 12, 10),h(1, 1, 0)] / L0[h(1, 12, 10),h(1, 12, 10)] );
  t0[h(1, 12, 11),h(1, 1, 0)] = ( t0[h(1, 12, 11),h(1, 1, 0)] + ( -( L0[h(1, 12, 11),h(1, 12, 10)] ) * t0[h(1, 12, 10),h(1, 1, 0)] ) );
  t0[h(1, 12, 11),h(1, 1, 0)] = ( t0[h(1, 12, 11),h(1, 1, 0)] / L0[h(1, 12, 11),h(1, 12, 11)] );
  For [fi236;0;7;4] {

    a[h(1, 12, -fi236 + 11),h(1, 1, 0)] = ( a[h(1, 12, -fi236 + 11),h(1, 1, 0)] / L0[h(1, 12, -fi236 + 11),h(1, 12, -fi236 + 11)] );
    a[h(3, 12, -fi236 + 8),h(1, 1, 0)] = ( a[h(3, 12, -fi236 + 8),h(1, 1, 0)] + ( -( trans( L0[h(1, 12, -fi236 + 11),h(3, 12, -fi236 + 8)] ) ) * a[h(1, 12, -fi236 + 11),h(1, 1, 0)] ) );
    a[h(1, 12, -fi236 + 10),h(1, 1, 0)] = ( a[h(1, 12, -fi236 + 10),h(1, 1, 0)] / L0[h(1, 12, -fi236 + 10),h(1, 12, -fi236 + 10)] );
    a[h(2, 12, -fi236 + 8),h(1, 1, 0)] = ( a[h(2, 12, -fi236 + 8),h(1, 1, 0)] + ( -( trans( L0[h(1, 12, -fi236 + 10),h(2, 12, -fi236 + 8)] ) ) * a[h(1, 12, -fi236 + 10),h(1, 1, 0)] ) );
    a[h(1, 12, -fi236 + 9),h(1, 1, 0)] = ( a[h(1, 12, -fi236 + 9),h(1, 1, 0)] / L0[h(1, 12, -fi236 + 9),h(1, 12, -fi236 + 9)] );
    a[h(1, 12, -fi236 + 8),h(1, 1, 0)] = ( a[h(1, 12, -fi236 + 8),h(1, 1, 0)] + ( -( trans( L0[h(1, 12, -fi236 + 9),h(1, 12, -fi236 + 8)] ) ) * a[h(1, 12, -fi236 + 9),h(1, 1, 0)] ) );
    a[h(1, 12, -fi236 + 8),h(1, 1, 0)] = ( a[h(1, 12, -fi236 + 8),h(1, 1, 0)] / L0[h(1, 12, -fi236 + 8),h(1, 12, -fi236 + 8)] );
    a[h(-fi236 + 8, 12, 0),h(1, 1, 0)] = ( a[h(-fi236 + 8, 12, 0),h(1, 1, 0)] + ( -( trans( L0[h(4, 12, -fi236 + 8),h(-fi236 + 8, 12, 0)] ) ) * a[h(4, 12, -fi236 + 8),h(1, 1, 0)] ) );

  };
  a[h(1, 12, 3),h(1, 1, 0)] = ( a[h(1, 12, 3),h(1, 1, 0)] / L0[h(1, 12, 3),h(1, 12, 3)] );
  a[h(3, 12, 0),h(1, 1, 0)] = ( a[h(3, 12, 0),h(1, 1, 0)] + ( -( trans( L0[h(1, 12, 3),h(3, 12, 0)] ) ) * a[h(1, 12, 3),h(1, 1, 0)] ) );
  a[h(1, 12, 2),h(1, 1, 0)] = ( a[h(1, 12, 2),h(1, 1, 0)] / L0[h(1, 12, 2),h(1, 12, 2)] );
  a[h(2, 12, 0),h(1, 1, 0)] = ( a[h(2, 12, 0),h(1, 1, 0)] + ( -( trans( L0[h(1, 12, 2),h(2, 12, 0)] ) ) * a[h(1, 12, 2),h(1, 1, 0)] ) );
  a[h(1, 12, 1),h(1, 1, 0)] = ( a[h(1, 12, 1),h(1, 1, 0)] / L0[h(1, 12, 1),h(1, 12, 1)] );
  a[h(1, 12, 0),h(1, 1, 0)] = ( a[h(1, 12, 0),h(1, 1, 0)] + ( -( trans( L0[h(1, 12, 1),h(1, 12, 0)] ) ) * a[h(1, 12, 1),h(1, 1, 0)] ) );
  a[h(1, 12, 0),h(1, 1, 0)] = ( a[h(1, 12, 0),h(1, 1, 0)] / L0[h(1, 12, 0),h(1, 12, 0)] );
  kx = ( X * x );
  f = ( trans( kx ) * y );
  For [fi313;0;7;4] {

    v[h(1, 12, fi313),h(1, 1, 0)] = ( v[h(1, 12, fi313),h(1, 1, 0)] / L0[h(1, 12, fi313),h(1, 12, fi313)] );
    v[h(3, 12, fi313 + 1),h(1, 1, 0)] = ( v[h(3, 12, fi313 + 1),h(1, 1, 0)] + ( -( L0[h(3, 12, fi313 + 1),h(1, 12, fi313)] ) * v[h(1, 12, fi313),h(1, 1, 0)] ) );
    v[h(1, 12, fi313 + 1),h(1, 1, 0)] = ( v[h(1, 12, fi313 + 1),h(1, 1, 0)] / L0[h(1, 12, fi313 + 1),h(1, 12, fi313 + 1)] );
    v[h(2, 12, fi313 + 2),h(1, 1, 0)] = ( v[h(2, 12, fi313 + 2),h(1, 1, 0)] + ( -( L0[h(2, 12, fi313 + 2),h(1, 12, fi313 + 1)] ) * v[h(1, 12, fi313 + 1),h(1, 1, 0)] ) );
    v[h(1, 12, fi313 + 2),h(1, 1, 0)] = ( v[h(1, 12, fi313 + 2),h(1, 1, 0)] / L0[h(1, 12, fi313 + 2),h(1, 12, fi313 + 2)] );
    v[h(1, 12, fi313 + 3),h(1, 1, 0)] = ( v[h(1, 12, fi313 + 3),h(1, 1, 0)] + ( -( L0[h(1, 12, fi313 + 3),h(1, 12, fi313 + 2)] ) * v[h(1, 12, fi313 + 2),h(1, 1, 0)] ) );
    v[h(1, 12, fi313 + 3),h(1, 1, 0)] = ( v[h(1, 12, fi313 + 3),h(1, 1, 0)] / L0[h(1, 12, fi313 + 3),h(1, 12, fi313 + 3)] );
    v[h(-fi313 + 8, 12, fi313 + 4),h(1, 1, 0)] = ( v[h(-fi313 + 8, 12, fi313 + 4),h(1, 1, 0)] + ( -( L0[h(-fi313 + 8, 12, fi313 + 4),h(4, 12, fi313)] ) * v[h(4, 12, fi313),h(1, 1, 0)] ) );

  };
  v[h(1, 12, 8),h(1, 1, 0)] = ( v[h(1, 12, 8),h(1, 1, 0)] / L0[h(1, 12, 8),h(1, 12, 8)] );
  v[h(3, 12, 9),h(1, 1, 0)] = ( v[h(3, 12, 9),h(1, 1, 0)] + ( -( L0[h(3, 12, 9),h(1, 12, 8)] ) * v[h(1, 12, 8),h(1, 1, 0)] ) );
  v[h(1, 12, 9),h(1, 1, 0)] = ( v[h(1, 12, 9),h(1, 1, 0)] / L0[h(1, 12, 9),h(1, 12, 9)] );
  v[h(2, 12, 10),h(1, 1, 0)] = ( v[h(2, 12, 10),h(1, 1, 0)] + ( -( L0[h(2, 12, 10),h(1, 12, 9)] ) * v[h(1, 12, 9),h(1, 1, 0)] ) );
  v[h(1, 12, 10),h(1, 1, 0)] = ( v[h(1, 12, 10),h(1, 1, 0)] / L0[h(1, 12, 10),h(1, 12, 10)] );
  v[h(1, 12, 11),h(1, 1, 0)] = ( v[h(1, 12, 11),h(1, 1, 0)] + ( -( L0[h(1, 12, 11),h(1, 12, 10)] ) * v[h(1, 12, 10),h(1, 1, 0)] ) );
  v[h(1, 12, 11),h(1, 1, 0)] = ( v[h(1, 12, 11),h(1, 1, 0)] / L0[h(1, 12, 11),h(1, 12, 11)] );
  var = ( ( trans( x ) * x ) - ( trans( kx ) * kx ) );
  lp = ( trans( y ) * y );
