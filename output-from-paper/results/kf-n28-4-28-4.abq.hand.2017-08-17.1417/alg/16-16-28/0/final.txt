Using part. schemes: Assign_Mul_T_UpperTriangular_Matrix_Matrix_opt_m04_m21_Assign_Mul_T_UpperTriangular_UpperTriangular_Symmetric_opt_m01_Assign_Mul_UpperTriangular_Matrix_Matrix_opt_m04_m21_ldiv_utn_ow_opt_m4_n1

================================================================================

  y = ( ( F * x ) + ( B * u ) );
  M0 = ( F * P );
  Y = ( ( M0 * trans( F ) ) + Q );
  v0 = ( z - ( H * y ) );
  M1 = ( H * Y );
  M2 = ( Y * trans( H ) );
  M3 = ( ( M1 * trans( H ) ) + R );
  U[h(1, 16, 0),h(1, 16, 0)] = sqrt( U[h(1, 16, 0),h(1, 16, 0)] );
  For [fi35;1;15;1] {

    For [fi60;0;fi35 - 2;1] {

      U[h(1, 16, fi60),h(1, 16, fi35)] = ( U[h(1, 16, fi60),h(1, 16, fi35)] / U[h(1, 16, fi60),h(1, 16, fi60)] );
      U[h(fi35 - fi60 - 1, 16, fi60 + 1),h(1, 16, fi35)] = ( ( -( trans( U[h(1, 16, fi60),h(fi35 - fi60 - 1, 16, fi60 + 1)] ) ) * U[h(1, 16, fi60),h(1, 16, fi35)] ) + U[h(fi35 - fi60 - 1, 16, fi60 + 1),h(1, 16, fi35)] );

    };
    U[h(1, 16, Max(0, fi35 - 1)),h(1, 16, fi35)] = ( U[h(1, 16, Max(0, fi35 - 1)),h(1, 16, fi35)] / U[h(1, 16, Max(0, fi35 - 1)),h(1, 16, Max(0, fi35 - 1))] );
    U[h(1, 16, fi35),h(1, 16, fi35)] = ( ( -( trans( U[h(fi35, 16, 0),h(1, 16, fi35)] ) ) * U[h(fi35, 16, 0),h(1, 16, fi35)] ) + M4[h(1, 16, fi35),h(1, 16, fi35)] );
    U[h(1, 16, fi35),h(1, 16, fi35)] = sqrt( U[h(1, 16, fi35),h(1, 16, fi35)] );

  };
  For [fi92;0;14;1] {

    v2[h(1, 16, fi92),h(1, 1, 0)] = ( v2[h(1, 16, fi92),h(1, 1, 0)] / U0[h(1, 16, fi92),h(1, 16, fi92)] );
    v2[h(-fi92 + 15, 16, fi92 + 1),h(1, 1, 0)] = ( ( -( trans( U0[h(1, 16, fi92),h(-fi92 + 15, 16, fi92 + 1)] ) ) * v2[h(1, 16, fi92),h(1, 1, 0)] ) + v2[h(-fi92 + 15, 16, fi92 + 1),h(1, 1, 0)] );

  };
  v2[h(1, 16, 15),h(1, 1, 0)] = ( v2[h(1, 16, 15),h(1, 1, 0)] / U0[h(1, 16, 15),h(1, 16, 15)] );
  For [fi121;0;14;1] {

    v4[h(1, 16, -fi121 + 15),h(1, 1, 0)] = ( v4[h(1, 16, -fi121 + 15),h(1, 1, 0)] / U0[h(1, 16, -fi121 + 15),h(1, 16, -fi121 + 15)] );
    v4[h(-fi121 + 15, 16, 0),h(1, 1, 0)] = ( ( -( U0[h(-fi121 + 15, 16, 0),h(1, 16, -fi121 + 15)] ) * v4[h(1, 16, -fi121 + 15),h(1, 1, 0)] ) + v4[h(-fi121 + 15, 16, 0),h(1, 1, 0)] );

  };
  v4[h(1, 16, 0),h(1, 1, 0)] = ( v4[h(1, 16, 0),h(1, 1, 0)] / U0[h(1, 16, 0),h(1, 16, 0)] );
  For [fi150;0;14;1] {

    For [fi169;0;27;1] {

      M6[h(1, 16, fi150),h(1, 28, fi169)] = ( M6[h(1, 16, fi150),h(1, 28, fi169)] / U0[h(1, 16, fi150),h(1, 16, fi150)] );

    };
    M6[h(-fi150 + 15, 16, fi150 + 1),h(28, 28, 0)] = ( ( -( trans( U0[h(1, 16, fi150),h(-fi150 + 15, 16, fi150 + 1)] ) ) * M6[h(1, 16, fi150),h(28, 28, 0)] ) + M6[h(-fi150 + 15, 16, fi150 + 1),h(28, 28, 0)] );

  };
  For [fi180;0;27;1] {

    M6[h(1, 16, 15),h(1, 28, fi180)] = ( M6[h(1, 16, 15),h(1, 28, fi180)] / U0[h(1, 16, 15),h(1, 16, 15)] );

  };
  For [fi191;0;14;1] {

    For [fi210;0;27;1] {

      M8[h(1, 16, -fi191 + 15),h(1, 28, fi210)] = ( M8[h(1, 16, -fi191 + 15),h(1, 28, fi210)] / U0[h(1, 16, -fi191 + 15),h(1, 16, -fi191 + 15)] );

    };
    M8[h(-fi191 + 15, 16, 0),h(28, 28, 0)] = ( ( -( U0[h(-fi191 + 15, 16, 0),h(1, 16, -fi191 + 15)] ) * M8[h(1, 16, -fi191 + 15),h(28, 28, 0)] ) + M8[h(-fi191 + 15, 16, 0),h(28, 28, 0)] );

  };
  For [fi221;0;27;1] {

    M8[h(1, 16, 0),h(1, 28, fi221)] = ( M8[h(1, 16, 0),h(1, 28, fi221)] / U0[h(1, 16, 0),h(1, 16, 0)] );

  };
  x = ( y + ( M2 * v0 ) );
  P = ( Y - ( M2 * M1 ) );
