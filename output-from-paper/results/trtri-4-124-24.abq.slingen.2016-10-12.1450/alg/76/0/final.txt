Using part. schemes: tril_inv_ow_opt_m4

================================================================================

  L[h(1, 76, 75),h(1, 76, 75)] = ( 1 / L[h(1, 76, 75),h(1, 76, 75)] );
  L[h(1, 76, 75),h(3, 76, 72)] = ( -( L[h(1, 76, 75),h(1, 76, 75)] ) * L[h(1, 76, 75),h(3, 76, 72)] );
  L[h(1, 76, 74),h(1, 76, 74)] = ( 1 / L[h(1, 76, 74),h(1, 76, 74)] );
  L[h(1, 76, 75),h(1, 76, 74)] = ( L[h(1, 76, 75),h(1, 76, 74)] * L[h(1, 76, 74),h(1, 76, 74)] );
  L[h(1, 76, 75),h(2, 76, 72)] = ( ( -( L[h(1, 76, 75),h(1, 76, 74)] ) * L[h(1, 76, 74),h(2, 76, 72)] ) + L[h(1, 76, 75),h(2, 76, 72)] );
  L[h(1, 76, 74),h(2, 76, 72)] = ( -( L[h(1, 76, 74),h(1, 76, 74)] ) * L[h(1, 76, 74),h(2, 76, 72)] );
  L[h(1, 76, 73),h(1, 76, 73)] = ( 1 / L[h(1, 76, 73),h(1, 76, 73)] );
  L[h(2, 76, 74),h(1, 76, 73)] = ( L[h(2, 76, 74),h(1, 76, 73)] * L[h(1, 76, 73),h(1, 76, 73)] );
  L[h(2, 76, 74),h(1, 76, 72)] = ( ( -( L[h(2, 76, 74),h(1, 76, 73)] ) * L[h(1, 76, 73),h(1, 76, 72)] ) + L[h(2, 76, 74),h(1, 76, 72)] );
  L[h(1, 76, 73),h(1, 76, 72)] = ( -( L[h(1, 76, 73),h(1, 76, 73)] ) * L[h(1, 76, 73),h(1, 76, 72)] );
  L[h(1, 76, 72),h(1, 76, 72)] = ( 1 / L[h(1, 76, 72),h(1, 76, 72)] );
  L[h(3, 76, 73),h(1, 76, 72)] = ( L[h(3, 76, 73),h(1, 76, 72)] * L[h(1, 76, 72),h(1, 76, 72)] );
  L[h(4, 76, 72),h(72, 76, 0)] = ( -( L[h(4, 76, 72),h(4, 76, 72)] ) * L[h(4, 76, 72),h(72, 76, 0)] );
  For [fi2;4;71;4] {

    L[h(1, 76, -fi2 + 75),h(1, 76, -fi2 + 75)] = ( 1 / L[h(1, 76, -fi2 + 75),h(1, 76, -fi2 + 75)] );
    L[h(1, 76, -fi2 + 75),h(3, 76, -fi2 + 72)] = ( -( L[h(1, 76, -fi2 + 75),h(1, 76, -fi2 + 75)] ) * L[h(1, 76, -fi2 + 75),h(3, 76, -fi2 + 72)] );
    L[h(1, 76, -fi2 + 74),h(1, 76, -fi2 + 74)] = ( 1 / L[h(1, 76, -fi2 + 74),h(1, 76, -fi2 + 74)] );
    L[h(1, 76, -fi2 + 75),h(1, 76, -fi2 + 74)] = ( L[h(1, 76, -fi2 + 75),h(1, 76, -fi2 + 74)] * L[h(1, 76, -fi2 + 74),h(1, 76, -fi2 + 74)] );
    L[h(1, 76, -fi2 + 75),h(2, 76, -fi2 + 72)] = ( ( -( L[h(1, 76, -fi2 + 75),h(1, 76, -fi2 + 74)] ) * L[h(1, 76, -fi2 + 74),h(2, 76, -fi2 + 72)] ) + L[h(1, 76, -fi2 + 75),h(2, 76, -fi2 + 72)] );
    L[h(1, 76, -fi2 + 74),h(2, 76, -fi2 + 72)] = ( -( L[h(1, 76, -fi2 + 74),h(1, 76, -fi2 + 74)] ) * L[h(1, 76, -fi2 + 74),h(2, 76, -fi2 + 72)] );
    L[h(1, 76, -fi2 + 73),h(1, 76, -fi2 + 73)] = ( 1 / L[h(1, 76, -fi2 + 73),h(1, 76, -fi2 + 73)] );
    L[h(2, 76, -fi2 + 74),h(1, 76, -fi2 + 73)] = ( L[h(2, 76, -fi2 + 74),h(1, 76, -fi2 + 73)] * L[h(1, 76, -fi2 + 73),h(1, 76, -fi2 + 73)] );
    L[h(2, 76, -fi2 + 74),h(1, 76, -fi2 + 72)] = ( ( -( L[h(2, 76, -fi2 + 74),h(1, 76, -fi2 + 73)] ) * L[h(1, 76, -fi2 + 73),h(1, 76, -fi2 + 72)] ) + L[h(2, 76, -fi2 + 74),h(1, 76, -fi2 + 72)] );
    L[h(1, 76, -fi2 + 73),h(1, 76, -fi2 + 72)] = ( -( L[h(1, 76, -fi2 + 73),h(1, 76, -fi2 + 73)] ) * L[h(1, 76, -fi2 + 73),h(1, 76, -fi2 + 72)] );
    L[h(1, 76, -fi2 + 72),h(1, 76, -fi2 + 72)] = ( 1 / L[h(1, 76, -fi2 + 72),h(1, 76, -fi2 + 72)] );
    L[h(3, 76, -fi2 + 73),h(1, 76, -fi2 + 72)] = ( L[h(3, 76, -fi2 + 73),h(1, 76, -fi2 + 72)] * L[h(1, 76, -fi2 + 72),h(1, 76, -fi2 + 72)] );
    L[h(fi2, 76, -fi2 + 76),h(4, 76, -fi2 + 72)] = ( L[h(fi2, 76, -fi2 + 76),h(4, 76, -fi2 + 72)] * L[h(4, 76, -fi2 + 72),h(4, 76, -fi2 + 72)] );
    L[h(fi2, 76, -fi2 + 76),h(-fi2 + 72, 76, 0)] = ( ( -( L[h(fi2, 76, -fi2 + 76),h(4, 76, -fi2 + 72)] ) * L[h(4, 76, -fi2 + 72),h(-fi2 + 72, 76, 0)] ) + L[h(fi2, 76, -fi2 + 76),h(-fi2 + 72, 76, 0)] );
    L[h(4, 76, -fi2 + 72),h(-fi2 + 72, 76, 0)] = ( -( L[h(4, 76, -fi2 + 72),h(4, 76, -fi2 + 72)] ) * L[h(4, 76, -fi2 + 72),h(-fi2 + 72, 76, 0)] );

  };
  L[h(1, 76, 3),h(1, 76, 3)] = ( 1 / L[h(1, 76, 3),h(1, 76, 3)] );
  L[h(1, 76, 3),h(3, 76, 0)] = ( -( L[h(1, 76, 3),h(1, 76, 3)] ) * L[h(1, 76, 3),h(3, 76, 0)] );
  L[h(1, 76, 2),h(1, 76, 2)] = ( 1 / L[h(1, 76, 2),h(1, 76, 2)] );
  L[h(1, 76, 3),h(1, 76, 2)] = ( L[h(1, 76, 3),h(1, 76, 2)] * L[h(1, 76, 2),h(1, 76, 2)] );
  L[h(1, 76, 3),h(2, 76, 0)] = ( ( -( L[h(1, 76, 3),h(1, 76, 2)] ) * L[h(1, 76, 2),h(2, 76, 0)] ) + L[h(1, 76, 3),h(2, 76, 0)] );
  L[h(1, 76, 2),h(2, 76, 0)] = ( -( L[h(1, 76, 2),h(1, 76, 2)] ) * L[h(1, 76, 2),h(2, 76, 0)] );
  L[h(1, 76, 1),h(1, 76, 1)] = ( 1 / L[h(1, 76, 1),h(1, 76, 1)] );
  L[h(2, 76, 2),h(1, 76, 1)] = ( L[h(2, 76, 2),h(1, 76, 1)] * L[h(1, 76, 1),h(1, 76, 1)] );
  L[h(2, 76, 2),h(1, 76, 0)] = ( ( -( L[h(2, 76, 2),h(1, 76, 1)] ) * L[h(1, 76, 1),h(1, 76, 0)] ) + L[h(2, 76, 2),h(1, 76, 0)] );
  L[h(1, 76, 1),h(1, 76, 0)] = ( -( L[h(1, 76, 1),h(1, 76, 1)] ) * L[h(1, 76, 1),h(1, 76, 0)] );
  L[h(1, 76, 0),h(1, 76, 0)] = ( 1 / L[h(1, 76, 0),h(1, 76, 0)] );
  L[h(3, 76, 1),h(1, 76, 0)] = ( L[h(3, 76, 1),h(1, 76, 0)] * L[h(1, 76, 0),h(1, 76, 0)] );
  L[h(72, 76, 4),h(4, 76, 0)] = ( L[h(72, 76, 4),h(4, 76, 0)] * L[h(4, 76, 0),h(4, 76, 0)] );
