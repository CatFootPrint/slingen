Using part. schemes: tril_inv_ow_opt_m4

================================================================================

  L[h(1, 100, 99),h(1, 100, 99)] = ( 1 / L[h(1, 100, 99),h(1, 100, 99)] );
  L[h(1, 100, 99),h(3, 100, 96)] = ( -( L[h(1, 100, 99),h(1, 100, 99)] ) * L[h(1, 100, 99),h(3, 100, 96)] );
  L[h(1, 100, 98),h(1, 100, 98)] = ( 1 / L[h(1, 100, 98),h(1, 100, 98)] );
  L[h(1, 100, 99),h(1, 100, 98)] = ( L[h(1, 100, 99),h(1, 100, 98)] * L[h(1, 100, 98),h(1, 100, 98)] );
  L[h(1, 100, 99),h(2, 100, 96)] = ( ( -( L[h(1, 100, 99),h(1, 100, 98)] ) * L[h(1, 100, 98),h(2, 100, 96)] ) + L[h(1, 100, 99),h(2, 100, 96)] );
  L[h(1, 100, 98),h(2, 100, 96)] = ( -( L[h(1, 100, 98),h(1, 100, 98)] ) * L[h(1, 100, 98),h(2, 100, 96)] );
  L[h(1, 100, 97),h(1, 100, 97)] = ( 1 / L[h(1, 100, 97),h(1, 100, 97)] );
  L[h(2, 100, 98),h(1, 100, 97)] = ( L[h(2, 100, 98),h(1, 100, 97)] * L[h(1, 100, 97),h(1, 100, 97)] );
  L[h(2, 100, 98),h(1, 100, 96)] = ( ( -( L[h(2, 100, 98),h(1, 100, 97)] ) * L[h(1, 100, 97),h(1, 100, 96)] ) + L[h(2, 100, 98),h(1, 100, 96)] );
  L[h(1, 100, 97),h(1, 100, 96)] = ( -( L[h(1, 100, 97),h(1, 100, 97)] ) * L[h(1, 100, 97),h(1, 100, 96)] );
  L[h(1, 100, 96),h(1, 100, 96)] = ( 1 / L[h(1, 100, 96),h(1, 100, 96)] );
  L[h(3, 100, 97),h(1, 100, 96)] = ( L[h(3, 100, 97),h(1, 100, 96)] * L[h(1, 100, 96),h(1, 100, 96)] );
  L[h(4, 100, 96),h(96, 100, 0)] = ( -( L[h(4, 100, 96),h(4, 100, 96)] ) * L[h(4, 100, 96),h(96, 100, 0)] );
  For [fi2;4;95;4] {

    L[h(1, 100, -fi2 + 99),h(1, 100, -fi2 + 99)] = ( 1 / L[h(1, 100, -fi2 + 99),h(1, 100, -fi2 + 99)] );
    L[h(1, 100, -fi2 + 99),h(3, 100, -fi2 + 96)] = ( -( L[h(1, 100, -fi2 + 99),h(1, 100, -fi2 + 99)] ) * L[h(1, 100, -fi2 + 99),h(3, 100, -fi2 + 96)] );
    L[h(1, 100, -fi2 + 98),h(1, 100, -fi2 + 98)] = ( 1 / L[h(1, 100, -fi2 + 98),h(1, 100, -fi2 + 98)] );
    L[h(1, 100, -fi2 + 99),h(1, 100, -fi2 + 98)] = ( L[h(1, 100, -fi2 + 99),h(1, 100, -fi2 + 98)] * L[h(1, 100, -fi2 + 98),h(1, 100, -fi2 + 98)] );
    L[h(1, 100, -fi2 + 99),h(2, 100, -fi2 + 96)] = ( ( -( L[h(1, 100, -fi2 + 99),h(1, 100, -fi2 + 98)] ) * L[h(1, 100, -fi2 + 98),h(2, 100, -fi2 + 96)] ) + L[h(1, 100, -fi2 + 99),h(2, 100, -fi2 + 96)] );
    L[h(1, 100, -fi2 + 98),h(2, 100, -fi2 + 96)] = ( -( L[h(1, 100, -fi2 + 98),h(1, 100, -fi2 + 98)] ) * L[h(1, 100, -fi2 + 98),h(2, 100, -fi2 + 96)] );
    L[h(1, 100, -fi2 + 97),h(1, 100, -fi2 + 97)] = ( 1 / L[h(1, 100, -fi2 + 97),h(1, 100, -fi2 + 97)] );
    L[h(2, 100, -fi2 + 98),h(1, 100, -fi2 + 97)] = ( L[h(2, 100, -fi2 + 98),h(1, 100, -fi2 + 97)] * L[h(1, 100, -fi2 + 97),h(1, 100, -fi2 + 97)] );
    L[h(2, 100, -fi2 + 98),h(1, 100, -fi2 + 96)] = ( ( -( L[h(2, 100, -fi2 + 98),h(1, 100, -fi2 + 97)] ) * L[h(1, 100, -fi2 + 97),h(1, 100, -fi2 + 96)] ) + L[h(2, 100, -fi2 + 98),h(1, 100, -fi2 + 96)] );
    L[h(1, 100, -fi2 + 97),h(1, 100, -fi2 + 96)] = ( -( L[h(1, 100, -fi2 + 97),h(1, 100, -fi2 + 97)] ) * L[h(1, 100, -fi2 + 97),h(1, 100, -fi2 + 96)] );
    L[h(1, 100, -fi2 + 96),h(1, 100, -fi2 + 96)] = ( 1 / L[h(1, 100, -fi2 + 96),h(1, 100, -fi2 + 96)] );
    L[h(3, 100, -fi2 + 97),h(1, 100, -fi2 + 96)] = ( L[h(3, 100, -fi2 + 97),h(1, 100, -fi2 + 96)] * L[h(1, 100, -fi2 + 96),h(1, 100, -fi2 + 96)] );
    L[h(fi2, 100, -fi2 + 100),h(4, 100, -fi2 + 96)] = ( L[h(fi2, 100, -fi2 + 100),h(4, 100, -fi2 + 96)] * L[h(4, 100, -fi2 + 96),h(4, 100, -fi2 + 96)] );
    L[h(fi2, 100, -fi2 + 100),h(-fi2 + 96, 100, 0)] = ( ( -( L[h(fi2, 100, -fi2 + 100),h(4, 100, -fi2 + 96)] ) * L[h(4, 100, -fi2 + 96),h(-fi2 + 96, 100, 0)] ) + L[h(fi2, 100, -fi2 + 100),h(-fi2 + 96, 100, 0)] );
    L[h(4, 100, -fi2 + 96),h(-fi2 + 96, 100, 0)] = ( -( L[h(4, 100, -fi2 + 96),h(4, 100, -fi2 + 96)] ) * L[h(4, 100, -fi2 + 96),h(-fi2 + 96, 100, 0)] );

  };
  L[h(1, 100, 3),h(1, 100, 3)] = ( 1 / L[h(1, 100, 3),h(1, 100, 3)] );
  L[h(1, 100, 3),h(3, 100, 0)] = ( -( L[h(1, 100, 3),h(1, 100, 3)] ) * L[h(1, 100, 3),h(3, 100, 0)] );
  L[h(1, 100, 2),h(1, 100, 2)] = ( 1 / L[h(1, 100, 2),h(1, 100, 2)] );
  L[h(1, 100, 3),h(1, 100, 2)] = ( L[h(1, 100, 3),h(1, 100, 2)] * L[h(1, 100, 2),h(1, 100, 2)] );
  L[h(1, 100, 3),h(2, 100, 0)] = ( ( -( L[h(1, 100, 3),h(1, 100, 2)] ) * L[h(1, 100, 2),h(2, 100, 0)] ) + L[h(1, 100, 3),h(2, 100, 0)] );
  L[h(1, 100, 2),h(2, 100, 0)] = ( -( L[h(1, 100, 2),h(1, 100, 2)] ) * L[h(1, 100, 2),h(2, 100, 0)] );
  L[h(1, 100, 1),h(1, 100, 1)] = ( 1 / L[h(1, 100, 1),h(1, 100, 1)] );
  L[h(2, 100, 2),h(1, 100, 1)] = ( L[h(2, 100, 2),h(1, 100, 1)] * L[h(1, 100, 1),h(1, 100, 1)] );
  L[h(2, 100, 2),h(1, 100, 0)] = ( ( -( L[h(2, 100, 2),h(1, 100, 1)] ) * L[h(1, 100, 1),h(1, 100, 0)] ) + L[h(2, 100, 2),h(1, 100, 0)] );
  L[h(1, 100, 1),h(1, 100, 0)] = ( -( L[h(1, 100, 1),h(1, 100, 1)] ) * L[h(1, 100, 1),h(1, 100, 0)] );
  L[h(1, 100, 0),h(1, 100, 0)] = ( 1 / L[h(1, 100, 0),h(1, 100, 0)] );
  L[h(3, 100, 1),h(1, 100, 0)] = ( L[h(3, 100, 1),h(1, 100, 0)] * L[h(1, 100, 0),h(1, 100, 0)] );
  L[h(96, 100, 4),h(4, 100, 0)] = ( L[h(96, 100, 4),h(4, 100, 0)] * L[h(4, 100, 0),h(4, 100, 0)] );
