Sigma-LL src for :

Decl { {u'A': SquaredMatrix[A, (12, 12), GenMatAccess], u'a': Scalar[a, (1, 1), GenMatAccess], u'b': Scalar[b, (1, 1), GenMatAccess], u'y1': Matrix[y1, (12, 1), GenMatAccess], u'y2': Matrix[y2, (12, 1), GenMatAccess], u'v1': Matrix[v1, (12, 1), GenMatAccess], u'v2': Matrix[v2, (12, 1), GenMatAccess], u't': Scalar[t, (1, 1), GenMatAccess], u'W': SquaredMatrix[W, (12, 12), GenMatAccess], u'y': Matrix[y, (12, 1), GenMatAccess], u'x': Matrix[x, (12, 1), GenMatAccess], u'x0': Matrix[x0, (12, 1), GenMatAccess], u'x1': Matrix[x1, (12, 1), GenMatAccess], u'z1': Matrix[z1, (12, 1), GenMatAccess], u'z2': Matrix[z2, (12, 1), GenMatAccess]} }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ann: {}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Entry 0:
Entry 0:
Eq: Tile( (1, 1), y1[12,1] ) = ( ( Tile( (1, 1), a[1,1] ) Kro Tile( (1, 1), v1[12,1] ) ) + ( Tile( (1, 1), t[1,1] ) Kro Tile( (1, 1), z1[12,1] ) ) )
Eq.ann: {}
Entry 1:
Eq: Tile( (1, 1), y2[12,1] ) = ( ( Tile( (1, 1), a[1,1] ) Kro Tile( (1, 1), v2[12,1] ) ) + ( Tile( (1, 1), t[1,1] ) Kro Tile( (1, 1), z2[12,1] ) ) )
Eq.ann: {}
Entry 2:
Eq: Tile( (1, 1), x1[12,1] ) = ( ( T( Tile( (1, 1), W[12,12] ) ) * Tile( (1, 1), y1[12,1] ) ) - ( T( Tile( (1, 1), A[12,12] ) ) * Tile( (1, 1), y2[12,1] ) ) )
Eq.ann: {}
Entry 3:
Eq: Tile( (1, 1), x[12,1] ) = ( Tile( (1, 1), x0[12,1] ) + ( Tile( (1, 1), b[1,1] ) Kro Tile( (1, 1), x1[12,1] ) ) )
Eq.ann: {}
Entry 4:
Eq: Tile( (1, 1), z1[12,1] ) = ( Tile( (1, 1), y1[12,1] ) - ( Tile( (1, 1), W[12,12] ) * Tile( (1, 1), x[12,1] ) ) )
Eq.ann: {}
Entry 5:
Eq: Tile( (1, 1), z2[12,1] ) = ( Tile( (1, 1), y2[12,1] ) - ( Tile( (1, 1), y[12,1] ) - ( Tile( (1, 1), A[12,12] ) * Tile( (1, 1), x[12,1] ) ) ) )
Eq.ann: {}
Entry 6:
Eq: Tile( (1, 1), v1[12,1] ) = ( ( Tile( (1, 1), a[1,1] ) Kro Tile( (1, 1), v1[12,1] ) ) + ( Tile( (1, 1), t[1,1] ) Kro Tile( (1, 1), z1[12,1] ) ) )
Eq.ann: {}
Entry 7:
Eq: Tile( (1, 1), v2[12,1] ) = ( ( Tile( (1, 1), a[1,1] ) Kro Tile( (1, 1), v2[12,1] ) ) + ( Tile( (1, 1), t[1,1] ) Kro Tile( (1, 1), z2[12,1] ) ) )
Eq.ann: {}


====================

y1 = Sum [ i0;0;11;1 ] {
  [h(1, 12, (i0)),h(1, 1, 0)]((a[h(1, 1, 0),h(1, 1, 0)])*(v1[h(1, 12, (i0)),h(1, 1, 0)])+(t[h(1, 1, 0),h(1, 1, 0)])*(z1[h(1, 12, (i0)),h(1, 1, 0)]))
}
;
y2 = Sum [ i0;0;11;1 ] {
  [h(1, 12, (i0)),h(1, 1, 0)]((a[h(1, 1, 0),h(1, 1, 0)])*(v2[h(1, 12, (i0)),h(1, 1, 0)])+(t[h(1, 1, 0),h(1, 1, 0)])*(z2[h(1, 12, (i0)),h(1, 1, 0)]))
}
;
x1 = Sum [ k15;0;11;1 ] {
  [h(1, 12, (k15)),h(1, 1, 0)]((trans((W[h(1, 12, (0)),h(1, 12, (k15))])))*(y1[h(1, 12, (0)),h(1, 1, 0)])-((trans((A[h(1, 12, (0)),h(1, 12, (k15))])))*(y2[h(1, 12, (0)),h(1, 1, 0)])))
}
+
Sum [ i6;1;11;1 ] {
  Sum [ k15;0;11;1 ] {
    $[h(1, 12, (k15)),h(1, 1, 0)]((trans((W[h(1, 12, (i6)),h(1, 12, (k15))])))*(y1[h(1, 12, (i6)),h(1, 1, 0)]))
  }
}
+
Sum [ i0;1;11;1 ] {
  Sum [ k15;0;11;1 ] {
    $[h(1, 12, (k15)),h(1, 1, 0)](-(((trans((A[h(1, 12, (i0)),h(1, 12, (k15))])))*(y2[h(1, 12, (i0)),h(1, 1, 0)]))))
  }
}
;
x = Sum [ i0;0;11;1 ] {
  [h(1, 12, (i0)),h(1, 1, 0)](x0[h(1, 12, (i0)),h(1, 1, 0)]+(b[h(1, 1, 0),h(1, 1, 0)])*(x1[h(1, 12, (i0)),h(1, 1, 0)]))
}
;
z1 = Sum [ i6;0;11;1 ] {
  [h(1, 12, (i6)),h(1, 1, 0)](y1[h(1, 12, (i6)),h(1, 1, 0)]-((W[h(1, 12, (i6)),h(1, 12, (0))])*(x[h(1, 12, (0)),h(1, 1, 0)])))
}
+
Sum [ i0;1;11;1 ] {
  Sum [ i6;0;11;1 ] {
    $[h(1, 12, (i6)),h(1, 1, 0)](-(((W[h(1, 12, (i6)),h(1, 12, (i0))])*(x[h(1, 12, (i0)),h(1, 1, 0)]))))
  }
}
;
z2 = Sum [ i6;0;11;1 ] {
  [h(1, 12, (i6)),h(1, 1, 0)](y2[h(1, 12, (i6)),h(1, 1, 0)]-(y[h(1, 12, (i6)),h(1, 1, 0)]-((A[h(1, 12, (i6)),h(1, 12, (0))])*(x[h(1, 12, (0)),h(1, 1, 0)]))))
}
+
Sum [ i0;1;11;1 ] {
  Sum [ i6;0;11;1 ] {
    $[h(1, 12, (i6)),h(1, 1, 0)](-((-(((A[h(1, 12, (i6)),h(1, 12, (i0))])*(x[h(1, 12, (i0)),h(1, 1, 0)]))))))
  }
}
;
v1 = Sum [ i0;0;11;1 ] {
  [h(1, 12, (i0)),h(1, 1, 0)]((a[h(1, 1, 0),h(1, 1, 0)])*(v1[h(1, 12, (i0)),h(1, 1, 0)])+(t[h(1, 1, 0),h(1, 1, 0)])*(z1[h(1, 12, (i0)),h(1, 1, 0)]))
}
;
v2 = Sum [ i0;0;11;1 ] {
  [h(1, 12, (i0)),h(1, 1, 0)]((a[h(1, 1, 0),h(1, 1, 0)])*(v2[h(1, 12, (i0)),h(1, 1, 0)])+(t[h(1, 1, 0),h(1, 1, 0)])*(z2[h(1, 12, (i0)),h(1, 1, 0)]))
}
;


====================

